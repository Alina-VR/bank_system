@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "org.example.Main",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1322970774 { 
   	label=example
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   AbstractClient1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractClient</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   accounts: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   address: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   login: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   passport: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   password: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   userName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   userSurname: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ toClient(clientPOJO: ClientPOJO): Client</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Account1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Account</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   ID: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   accountType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   balance: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   bankName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   debt: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   login: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkBalance()</TD></TR>
<TR><TD ALIGN="LEFT" >+ push(sum: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toAccount(accountPOJO: AccountPOJO): Account</TD></TR>
<TR><TD ALIGN="LEFT" >+ withdraw(sum: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AccountPOJO1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AccountPOJO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   ID: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   accountType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   balance: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   bankName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   login: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ArrayAccountsPOJO1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ArrayAccountsPOJO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   accounts: List&lt;AccountPOJO&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ toAccountsArray(): List&lt;Account&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ArrayClientsPOJO1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ArrayClientsPOJO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   clients: List&lt;ClientPOJO&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ toClientsArray(): List&lt;Client&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Bank1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Bank</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   bankName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   creditLimit: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   fee: double [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ credit(balance: int, login: String, bankName: String, accountType: String): Credit</TD></TR>
<TR><TD ALIGN="LEFT" >+ debit(balance: int, login: String, bankName: String, accountType: String): Debit</TD></TR>
<TR><TD ALIGN="LEFT" >+ setBankID(bankName: String): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Base1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Base</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addBanks()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Client1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Client</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClientPOJO1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClientPOJO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   UserName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   UserSurname: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   accounts: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   address: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   login: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   passport: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   password: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClientServer1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClientServer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createAccount(currClient: Client): Account</TD></TR>
<TR><TD ALIGN="LEFT" >+ signIn(): Client</TD></TR>
<TR><TD ALIGN="LEFT" >+ signUp(): Client</TD></TR>
<TR><TD ALIGN="LEFT" >+ workWithAccount(element: String, currClient: Client)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Converter1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Converter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ toJSONAccount(arrayAccountsPOJOPOJO: ArrayAccountsPOJO)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toJSONClient(arrayClientsPOJO: ArrayClientsPOJO)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toJavaObjectAccount(): ArrayAccountsPOJO</TD></TR>
<TR><TD ALIGN="LEFT" >+ toJavaObjectClient(): ArrayClientsPOJO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Credit1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Credit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   creditDebt: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   creditLimit: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   fee: double [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkBalance()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDebt(account: Account)</TD></TR>
<TR><TD ALIGN="LEFT" >+ push(sum: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ withdraw(sum: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Debit1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Debit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkBalance()</TD></TR>
<TR><TD ALIGN="LEFT" >+ push(sum: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ withdraw(sum: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Main1526836320[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Main</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
AbstractClient1526836320 -> Client1526836320[arrowhead=none, arrowtail=empty, dir=both];
Account1526836320 -> Credit1526836320[arrowhead=none, arrowtail=empty, dir=both];
Account1526836320 -> Debit1526836320[arrowhead=none, arrowtail=empty, dir=both];
ArrayAccountsPOJO1526836320 -> Account1526836320[label="toAccountsArray() -> toAccount()"];
ArrayAccountsPOJO1526836320 -> AccountPOJO1526836320[label="accounts
[0..*]"];
ArrayClientsPOJO1526836320 -> AbstractClient1526836320[label="toClientsArray() -> toClient()"];
ArrayClientsPOJO1526836320 -> ClientPOJO1526836320[label="clients
[0..*]"];
Main1526836320 -> ArrayAccountsPOJO1526836320[label="main() -> toAccountsArray()"];
Main1526836320 -> ArrayClientsPOJO1526836320[label="main() -> toClientsArray()"];
Main1526836320 -> Base1526836320[label="main() -> addBanks()"];
    
}
@enduml